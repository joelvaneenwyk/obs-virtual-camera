# https://taskfile.dev

version: "3"

vars:
  GIT_VERSION:
    sh: |
      if _value="$(git -C "{{ fromSlash .ROOT_DIR }}" describe 2>/dev/null)"; then
        echo "$_value"
      else
        echo "0.0.1.unknown"
      fi

  VERSION: '{{ .GIT_VERSION | default "0.0.1.unknown" | splitLines | first }}'

  DEPS_ROOT: '{{ joinPath .ROOT_DIR ".deps" }}'
  BUILD_ROOT: '{{ joinPath .ROOT_DIR ".build" }}'
  BUILD_DIR_PLATFORM_NAME: >-
    {{if eq OS "windows"}}
    x64-windows
    {{else}}
      {{if eq OS "darwin"}}
      x64-macos
      {{else}}
      x64-linux
      {{end}}
    {{end}}
  PRESET_NAME: windows-x64
  BUILD_DIR: '{{ joinPath .BUILD_ROOT (trim .BUILD_DIR_PLATFORM_NAME) }}'

  BUILD_TARGET_NAME: '{{if eq OS "windows"}}x64-windows{{else}}{{if eq OS "darwin"}}x64-macos{{else}}x64-linux{{end}}{{end}}'

  DEP_SOURCE_DIR: '{{ joinPath .BUILD_DIR "source" }}'
  DEP_BUILD_DIR: '{{ joinPath .BUILD_DIR "out" }}'
  DEP_ARCHIVE_DIR: '{{ joinPath .BUILD_DIR "archives" }}'
  DEP_TEMP_DIR: '{{ joinPath .BUILD_DIR "tmp" }}'

  INSTALL_PREFIX: '{{ joinPath .BUILD_DIR "install" }}'

  TRIPLE_DIR_NAME: >-
    {{if eq OS "windows"}}
      x64-windows
    {{else}}
      {{if eq OS "darwin"}}
        x64-darwin
      {{else}}
        x64-linux
      {{end}}
    {{end}}

  VCPKG_ROOT: '{{ .ROOT_DIR }}/build-aux/vcpkg'
  VCPKG_EXE: '{{ .VCPKG_ROOT }}/vcpkg.exe'
  VCPKG_BUILD_DIR: '{{ joinPath .BUILD_DIR "vcpkg_installed" (trim .TRIPLE_DIR_NAME) }}'
  VCPKG_INSTALLED_ZLIB_HEADER_PATH: '{{ joinPath .VCPKG_BUILD_DIR "include" "zlib.h" }}'

tasks:
  default:
    deps: [build]

  info:
    silent: true
    cmds:
      - cmd: 'echo "{{ .VERSION }}"'
      - cmd: 'echo "Build: {{ .BUILD_DIR }}"'
      - cmd: 'echo "Dependencies: {{ .DEPS_ROOT }}"'
      - cmd: 'echo "zlib: {{ .VCPKG_INSTALLED_ZLIB_HEADER_PATH }}"'

  update:
    preconditions:
      - git --version
      - test -d "{{ .TASKFILE_DIR }}/.git"
    cmds:
      - cmd: git -C "{{ .TASKFILE_DIR }}" add .
      - cmd: git -C "{{ .TASKFILE_DIR }}" fetch
      - cmd: git -C "{{ .TASKFILE_DIR }}" pull --rebase --autostash

  git-submodule-update:
    status:
      - test -f "{{ .TASKFILE_DIR }}/build-aux/vcpkg/.gitignore"
    cmds:
      - cmd: git submodule update --recursive --checkout --init

  rebuild:
    cmds:
      - cmd: git add .
      - task: clean
      - task: build

  clean:
    cmds:
      - cmd: cmd.exe /D /C if exist "{{ fromSlash .DEPS_ROOT }}" rmdir /S /Q "{{ fromSlash .DEPS_ROOT }}"
      - cmd: cmd.exe /D /C if exist "{{ fromSlash .BUILD_ROOT }}" rmdir /S /Q "{{ fromSlash .BUILD_ROOT }}"
      - cmd: git -C "{{ fromSlash .VCPKG_ROOT }}" clean -xfd
      - cmd: git -C "{{ fromSlash .ROOT_DIR }}" clean -xfd

  vcpkg-bootstrap:
    deps: [git-submodule-update]
    sources:
      - '{{ .ROOT_DIR }}/build-aux/vcpkg/bootstrap-vcpkg.bat'
    generates:
      - '{{ .VCPKG_EXE }}'
    status:
      - 'test -f "{{ .VCPKG_EXE }}'
      - '"{{ fromSlash .VCPKG_EXE }}" --version'
    silent: true
    cmds:
      - cmd: cmd.exe /D /C call "{{ .ROOT_DIR }}/build-aux/vcpkg/bootstrap-vcpkg.bat"
        ignore_error: true
      - cmd: '"{{ fromSlash .VCPKG_EXE }}" --version'

  vcpkg:
    deps: [vcpkg-bootstrap]
    sources:
      - '{{ .TASKFILE_DIR }}/vcpkg.json'
    generates:
      - '{{ .VCPKG_INSTALLED_ZLIB_HEADER_PATH }}'
    cmds:
      - cmd: cmd.exe /D /C call "{{ fromSlash .VCPKG_EXE }}" install --vcpkg-root "{{ fromSlash .VCPKG_ROOT }}" --disable-metrics

  configure:
    deps: [vcpkg]
    cmds:
      - cmd: cmake --preset "{{ .PRESET_NAME }}" --trace

  build:
    deps: [configure]
    cmds:
      - cmd: cmake --build "{{ fromSlash .BUILD_DIR }}" --trace
